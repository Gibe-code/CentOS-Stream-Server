$ nano lstat_demo.c  
#include <stdio.h>  
#include <stdlib.h>  
#include <sys/stat.h>  
#include <unistd.h>  
int main() {  
    struct stat fileStat;  
// Create a test file and symbolic link  
    system("echo 'Sample file' > testfile.txt");  
    system("ln -s testfile.txt symlink.txt");  
// Use lstat to get info about symlink.txt  
    if (lstat("symlink.txt", &fileStat) == -1) {  
        perror("lstat failed");  
        exit(EXIT_FAILURE);  
    }  
printf("Information about symlink.txt using lstat():\n");  
    printf("File mode: %o\n", fileStat.st_mode);  
    printf("Link count: %lu\n", fileStat.st_nlink);  
    printf("File size: %ld bytes\n", fileStat.st_size);  
// Check if it's a symbolic link  
    if (S_ISLNK(fileStat.st_mode)) {  
        printf("Confirmed: symlink.txt is a symbolic link.\n");  
    } else {  
        printf("symlink.txt is not a symbolic link.\n");  
    }  
return 0;  
}  
